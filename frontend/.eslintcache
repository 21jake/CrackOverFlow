[{"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/index.js":"1","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/App.js":"2","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/auth/SignUp.js":"3","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/auth/SignIn.js":"4","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/NavBar.js":"5","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/User.js":"6","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostPreview.js":"7","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/vote/Vote.js":"8","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostDetail.js":"9","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/Avatar.js":"10","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/CommentWrapper.js":"11","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/Comment.js":"12","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/Home.js":"13","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/FirstAndLastDaysOfMonth.js":"14","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostCreate.js":"15","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/TopicsDropdown.js":"16","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/api/Axios.js":"17","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/Toast.js":"18","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/checkUserLoggedIn.js":"19","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/returnValueOrEmpty.js":"20","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/DeleteModal.js":"21","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/Guess.js":"22","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/useDebounce.js":"23","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/Search.js":"24","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/UserPreview.js":"25"},{"size":436,"mtime":1611140772765,"results":"26","hashOfConfig":"27"},{"size":2414,"mtime":1611849420807,"results":"28","hashOfConfig":"27"},{"size":6182,"mtime":1611203360169,"results":"29","hashOfConfig":"27"},{"size":4634,"mtime":1611203389547,"results":"30","hashOfConfig":"27"},{"size":3735,"mtime":1611888597883,"results":"31","hashOfConfig":"27"},{"size":6472,"mtime":1611227558676,"results":"32","hashOfConfig":"27"},{"size":2374,"mtime":1611889622092,"results":"33","hashOfConfig":"27"},{"size":4742,"mtime":1611848094002,"results":"34","hashOfConfig":"27"},{"size":3470,"mtime":1611649873276,"results":"35","hashOfConfig":"27"},{"size":286,"mtime":1611056789280,"results":"36","hashOfConfig":"27"},{"size":3592,"mtime":1611227434714,"results":"37","hashOfConfig":"27"},{"size":3667,"mtime":1611592165053,"results":"38","hashOfConfig":"27"},{"size":10761,"mtime":1611848222386,"results":"39","hashOfConfig":"27"},{"size":497,"mtime":1611068748421,"results":"40","hashOfConfig":"27"},{"size":4253,"mtime":1611841228523,"results":"41","hashOfConfig":"27"},{"size":1848,"mtime":1611829763227,"results":"42","hashOfConfig":"27"},{"size":449,"mtime":1611133764647,"results":"43","hashOfConfig":"27"},{"size":1307,"mtime":1611131731795,"results":"44","hashOfConfig":"27"},{"size":139,"mtime":1611148914551,"results":"45","hashOfConfig":"27"},{"size":127,"mtime":1611151591782,"results":"46","hashOfConfig":"27"},{"size":1023,"mtime":1611555727025,"results":"47","hashOfConfig":"27"},{"size":6807,"mtime":1611807443890,"results":"48","hashOfConfig":"27"},{"size":367,"mtime":1611821747900,"results":"49","hashOfConfig":"27"},{"size":5533,"mtime":1611892299564,"results":"50","hashOfConfig":"27"},{"size":983,"mtime":1611891618831,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"c18rc8",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/index.js",[],["110","111"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/App.js",["112","113"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/auth/SignUp.js",["114"],"import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Axios from '../../api/Axios';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { ToastError, ToastSuccess } from '../entities/shared/Toast';\nimport { useAuth } from '../../../App'\nimport { useHistory } from 'react-router-dom';\nimport TopicsDropdown from '../entities/shared/TopicsDropdown';\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" to=\"/\">\n        CrackOverFlow\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const { login, user } = useAuth();\n  const classes = useStyles();\n  const history = useHistory();\n  const [topics, setTopics] = useState([]);\n\n\n  useEffect(() => {\n    if (user && user.id) {\n        history.goBack();\n    }\n}, [user])\n\n\n  const saveEntity = async (formData) => {\n    try {\n      // setLoading(true);\n      const res = await Axios.post('/auth/register', formData);\n      // console.log(res,' res');\n      if (res && res.data.success) {\n        ToastSuccess(res.data.message);\n        // localStorage.setItem('crackToken', res.data.token.token)\n        login(res.data.user, res.data.token.token);\n        return history.push('/')\n        // return <Redirect to='/' />\n\n      } else {\n        ToastError(res.data.message);\n      }\n    } catch (error) {\n      console.log(error)\n      // ToastError('ÄÃ£ cÃ³ lá»i xáº£y ra, vui lÃ²ng thá»­ láº¡i');\n    }\n  }\n\n\n  const register = (event, errors, value) => {\n\n    if (!errors.length) {\n      value.topics = topics;\n      saveEntity(value);\n    }\n  }\n\n  const onTopicsChange = (e) => {\n    if (e) {\n      const output = e.map(element => element.value);\n      setTopics(output);\n    } else {\n      setTopics([]);\n    }\n  }\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          {/* <LockOutlinedIcon /> */}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ÄÄng kÃ½\n        </Typography>\n        <AvForm onSubmit={register}>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <AvField\n                name=\"fname\"\n                id=\"fname\"\n                type=\"text\"\n                label=\"TÃªn\"\n                autoFocus\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lÃ²ng nháº­p tÃªn' },\n                  maxLength: { value: 10, errorMessage: 'TÃªn khÃ´ng quÃ¡ 10 kÃ½ tá»±' }\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <AvField\n                name=\"lname\"\n                id=\"lname\"\n                label=\"Há»\"\n                type=\"text\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lÃ²ng nháº­p há»' },\n                  maxLength: { value: 10, errorMessage: 'Há» khÃ´ng quÃ¡ 10 kÃ½ tá»±' },\n                }}\n              />\n\n            </Grid>\n            <Grid item xs={12}>\n              <TopicsDropdown \n              onTopicsChange={onTopicsChange}\n              isMultiple={true}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <AvField\n                name=\"email\"\n                id=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lÃ²ng nháº­p email' },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <AvField\n                name=\"phone\"\n                id=\"phone\"\n                label=\"Sá» Äiá»n thoáº¡i\"\n                type=\"number\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lÃ²ng nháº­p sá» Äiá»n thoáº¡i' },\n                  pattern: {\n                    value: /^0[1-9][0-9]{8}$/,\n                    errorMessage: 'Sá» Äiá»n thoáº¡i khÃ´ng ÄÃºng Äá»nh dáº¡ng'\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <AvField\n                name=\"password\"\n                id=\"password\"\n                label=\"Máº­t kháº©u\"\n                type=\"number\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lÃ²ng nháº­p máº­t kháº©u' },\n                }}\n              />\n            </Grid>\n            <Button\n              type=\"submit\"\n              // onClick={register}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              ÄÄng kÃ½\n          </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link to=\"/login\" variant=\"body2\" >\n                  ÄÄng nháº­p báº±ng tÃ i khoáº£n\n              </Link>\n              </Grid>\n            </Grid>\n          </Grid>\n        </AvForm>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/auth/SignIn.js",["115"],"import React, {useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport { Link, useHistory } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from '../../api/Axios';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { ToastSuccess, ToastError } from '../entities/shared/Toast';\nimport {useAuth} from '../../../App'\n\n\nfunction Copyright() {\n\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" to=\"/\">\n        CrackOverFlow\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n  const {login, user} = useAuth();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user && user.id) {\n      history.goBack();\n    }\n}, [user])\n\n\n  const signIn = async (event, errors, value) => {\n    event.preventDefault();\n    if (!errors.length) {\n      try {\n        // setLoading(true);\n        const res = await Axios.post('/auth/login', value);\n        // return;\n        if (res && res.data.success) {\n          ToastSuccess(res.data.message);\n          login(res.data.user, res.data.token.token);\n          return history.push('/')\n        } else {\n          ToastError(res.data.message);\n        }      \n      } catch (error) {\n        console.log(error)\n        // ToastError('ÄÃ£ cÃ³ lá»i xáº£y ra, vui lÃ²ng thá»­ láº¡i');\n      }\n    }\n  }\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            ÄÄng nháº­p\n          </Typography>\n          <AvForm onSubmit={signIn}>\n            <Grid item xs={12}>\n              <AvField\n                name=\"email\"\n                id=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lÃ²ng nháº­p email' },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <AvField\n                name=\"password\"\n                id=\"passwprd\"\n                label=\"Máº­t kháº©u\"\n                type=\"password\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lÃ²ng nháº­p máº­t kháº©u' },\n                }}\n              />\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              ÄÄng nháº­p\n            </Button>\n          </AvForm>\n\n\n          <Grid container>\n            <Grid item>\n              <Link to=\"/register\" variant=\"body2\">\n                {\"ChÆ°a cÃ³ tÃ i khoáº£n? ÄÄng kÃ½ ngay\"}\n              </Link>\n            </Grid>\n          </Grid>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/NavBar.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/User.js",["116","117","118","119"],"import React, { useEffect, useState } from 'react';\nimport { Col, Row, Container } from 'reactstrap';\nimport PostPreview from '../post/PostPreview';\nimport { useAuth } from '../../../../App'\nimport { useHistory } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Axios from '../../../api/Axios';\nimport { ToastError } from '../shared/Toast'\nimport moment from 'moment';\nimport Comment from '../comment/Comment'\n\nconst User = () => {\n    const { user } = useAuth();\n    const history = useHistory();\n    const [totalCredit, setTotalCredit] = useState(0)\n\n    useEffect(() => {\n        if (!user || !user.id) {\n            history.push('/register');\n        }\n    }, [user])\n\n    const [totalPage, setTotalPage] = useState(1);\n    const [posts, setPosts] = useState([]);\n    const [comments, setComments] = useState([]);\n    const [paginationState, setPaginationState] = useState({\n        currentPage: 1,\n        itemsPerPage: 10\n    });\n\n    const getPosts = async () => {\n        try {\n            const res = await Axios.get(`/posts/user/${user?.id}?page=${paginationState.currentPage}`);\n            if (res.status === 200) {\n                // console.log(res.data.data.posts.total , 'res.res.data.data.total.data.posts)');\n                setPosts(res.data.data.posts.data);\n                const total = Math.ceil(res.data.data.posts.total / paginationState.itemsPerPage);\n                setTotalPage(total);\n                setTotalCredit(parseInt(res.data.data.totalCredit));\n            } else {\n                ToastError(res.data.message)\n            }\n        } catch (error) {\n            // console.log(error);\n        }\n    }\n\n    const getComments = async () => {\n        try {\n            const res = await Axios.get(`/comments/user/${user?.id}`);\n            if (res.status === 200) {\n                // console.log(res, 'res')\n                if (res.data.data.data.length) {\n                    setComments(res.data.data.data);\n                } else {\n                    setComments([]);\n                }\n\n            } else {\n                ToastError(res.data.message)\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n        if (user) {\n            getComments();\n        }\n    }, [user])\n\n    // console.log(posts, 'post')\n\n    const handlePaginationChange = (event, value) => {\n        setPaginationState({ ...paginationState, currentPage: value })\n    }\n\n    useEffect(() => {\n        getPosts();\n    }, [JSON.stringify(paginationState)]);\n\n    // console.log(user, 'user')\n    return (\n        <Container className=\"themed-container p-5\">\n            <Row>\n                <Col xs=\"8\">\n                    <Row>\n                        <Col xs=\"12\" >\n                            <span className=\"lead\">\n                                ThÃ´ng tin ngÆ°á»i dÃ¹ng\n                            </span>\n                        </Col>\n                        <Col xs=\"6\">\n                            <div className=\"font-weight-bold\">Há» tÃªn: </div>\n                            <div className=\"font-weight-bold\">Email: </div>\n                            <div className=\"font-weight-bold\">NgÃ y táº¡o tÃ i khoáº£n: </div>\n\n                        </Col>\n                        <Col xs=\"6\">\n                            <div>{user?.fname} {user?.lname} </div>\n                            <div>{user?.email}</div>\n                            <div>\n                                {moment(user?.created_at).format('DD/M/YYYY, h:mm')}\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col xs=\"4\">\n                    <div className=\"text-center border border-secondary rounded h-100 d-flex\">\n                        <h2 className=\"m-auto text-primary\">\n                            CREDIT: {totalCredit}\n                    </h2>\n                    </div>\n                </Col>\n            </Row>\n            <Row className=\"mt-5\">\n                <Col xs=\"7\">\n                    <Row>\n                        <Col xs=\"12\" >\n                            <span className=\"lead\">\n                                CÃ¡c bÃ i ÄÄng gáº§n ÄÃ¢y\n                        </span>\n                        </Col>\n                        <Col xs=\"12\" className=\"m-3\">\n                            <div className=\"border border-secondary rounded m-3\">\n                                {\n                                    posts?.length ? posts.map(e => (\n                                        <PostPreview\n                                            key={e.id}\n                                            post={e}\n                                            hideVote={true}\n                                        />\n                                    )) : <p className=\"text-center m-3\"> KhÃ´ng cÃ³ bÃ i ÄÄng nÃ o </p>\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row className={posts?.length ? \"justify-content-center\" : \"d-none\"}>\n                        <Pagination count={totalPage} variant=\"outlined\"\n                            onChange={handlePaginationChange}\n                            shape=\"rounded\" />\n                    </Row>\n                </Col>\n                <Col xs=\"5\">\n                    <Row>\n                        <Col xs=\"12\" >\n                            <span className=\"lead\">\n                                CÃ¡c bÃ¬nh luáº­n gáº§n ÄÃ¢y\n                        </span>\n                        </Col>\n                        <Col xs=\"12\" className=\"m-3\">\n                            <div className=\"border border-secondary rounded m-3\">\n                                {comments?.length ?\n                                    comments.map(e => \n                                        <Comment \n                                        key={e.id}\n                                        clickDisplayPost={true}\n                                        isShort={true} entity={e} />\n                                    )\n                                    : <p className=\"text-center m-3\"> KhÃ´ng cÃ³ bÃ¬nh luáº­n nÃ o </p>\n                                }\n                            </div>\n\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default User;","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostPreview.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/vote/Vote.js",["120","121"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostDetail.js",["122"],"import React, { useEffect, useState } from 'react';\nimport Vote from '../vote/Vote'\nimport { Col, Row, Modal, Badge, Button } from 'reactstrap';\n// import PostPreview from './PostPreview';\nimport CommentWrapper from '../comment/CommentWrapper'\nimport { returnValueOrEmpty } from '../shared/returnValueOrEmpty';\nimport moment from 'moment'; \nimport { useAuth } from '../../../../App';\nimport DeleteModal from '../shared/DeleteModal';\n\n\nimport Axios from '../../../api/Axios';\nimport { ToastError } from '../shared/Toast'\n// import { useEffect, useState, useRef } from 'react';\n\n\nconst PostDetail = (props) => {\n    const { post } = props;\n    const [comments, setComments] = useState([]);\n    const { user } = useAuth();\n    const [deleteModal, setDeleteModal] = useState(false);\n\n\n    const toggleDeleteModal = () => setDeleteModal(!deleteModal);\n    const deleteModalVisible = () => {\n        setDeleteModal(!deleteModal);\n    };\n\n    \n\n    useEffect(() => {\n        if (post?.comments?.length) {\n            setComments(post.comments)\n        }\n    }, [post?.comments])\n\n\n    const handleDeletePost = async () => {\n        try {\n            const res = await Axios.delete(`/posts/delete/${post.id}`);\n            if (res.status === 200) {\n                // setPostEntity(res.data.data);\n                setDeleteModal(false);\n                props.toggle();\n            } else {\n                ToastError(res.data.message)\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n\n    // console.log(post, 'post');\n    return (\n        <Modal className=\"m-3\" isOpen={props.modal} toggle={() => props.toggle()} className=\"postDetailModal\">\n            <DeleteModal\n                toggle={toggleDeleteModal}\n                modal={deleteModal}\n                prompt=\"XÃ¡c nháº­n xoÃ¡ bÃ i ÄÄng nÃ y?\"\n                handleComfirm={handleDeletePost}\n            />\n\n            <Col xs=\"12\" className=\"p-3\">\n                <Row>\n                    <Col xs=\"2\" className={post?.user_id === user?.id ? \"ml-auto\" : \"d-none\" }>\n                        <Button color=\"danger\" onClick={() => deleteModalVisible()}>\n                            XoÃ¡ bÃ i\n                        </Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"1\" className=\"m-auto mt-3\">\n                        <Vote\n                            totalVote={post?.post_votes}\n                            postId={post?.id}\n                        />\n                    </Col>\n                    <Col xs=\"11\" className=\"mt-5\">\n                        <p className=\"font-weight-bold\">\n                            {post?.title}\n                        </p>\n                        <p >\n                            {returnValueOrEmpty(post?.content)}\n                        </p>\n                    </Col>\n                    <Col xs=\"11\" className=\"ml-auto d-flex justify-content-between\">\n                        <Badge color=\"primary\">Chá»§ Äá» 1</Badge>\n                        <small className=\"font-italic \">\n                            {moment(returnValueOrEmpty(post?.created_at)).format('DD/M/YYYY, h:mm')}\n                        </small>\n                    </Col>\n                </Row>\n            </Col>\n            <Col xs=\"10\" className=\"ml-auto\">\n                <CommentWrapper comments={comments} postId={post?.id} />\n            </Col>\n        </Modal>\n    )\n}\n\nexport default PostDetail;","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/Avatar.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/CommentWrapper.js",["123"],"import React, { useEffect, useState, useRef } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport { Row, Col, Button } from 'reactstrap';\nimport { AvGroup, AvInput, AvFeedback, AvForm } from 'availity-reactstrap-validation';\nimport Comment from './Comment';\nimport Axios from '../../../api/Axios';\nimport { ToastError } from '../../entities/shared/Toast'\nimport {useAuth} from \"../../../../App\";\n\nconst CommentWrapper = (props) => {\n    const { postId } = props;\n    const [comments, setComments] = useState([]);\n    const formRef = useRef();\n    const {user} = useAuth();\n\n    const getComments = async () => {\n        try {\n            const res = await Axios.get(`/comments/post/${postId}`);\n            if (res.status === 200) {\n                // console.log(res, 'res')\n                if (res.data.data.length) {\n                    setComments(res.data.data);\n                } else {\n                    setComments([]);\n                }\n\n            } else {\n                ToastError(res.data.message)\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n        if (postId) {\n            getComments();\n        }\n    }, [postId])\n\n    const submitComment = async (data) => {\n        try {\n            const res = await Axios.post('comments/create', data);\n            if (res.status === 200) {\n                console.log(res, 'res');\n                setComments([...comments, res.data.data]);\n                formRef.current.reset();\n            } else {\n                ToastError(res.data.message)\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const handleSubmitComment = (event, errors, value) => {\n        if (!errors.length) {\n            value.post_id = postId;\n            value.user_id = user.id;\n            value.parent_comment_id = null;\n            console.log(value, 'value');\n            submitComment(value);\n        }\n    }\n\n\n    return (\n        <Row className=\"p-3 m-3\">\n            {\n                comments.length ? (\n                    comments.map(e => (\n                        <Comment \n                            clickDisplayPost={false}\n                            key={e.id}\n                            entity= {e}\n                            isShort={false}\n                        />\n                    ))\n                ): (\n                    <p>Trá» thÃ nh ngÆ°á»i Äáº§u tiÃªn bÃ¬nh luáº­n bÃ i ÄÄng nÃ y</p>\n                )\n            }\n\n            {/* <Comment /> */}\n\n            <Col xs=\"11\" className=\"ml-auto mt-3\">\n                <AvForm style={{ width: '100%' }} ref={formRef} onSubmit={handleSubmitComment}>\n                    <AvGroup>\n                        <AvInput\n                            type=\"textarea\"\n                            name=\"content\"\n                            placeholder=\"Tráº£ lá»i bÃ i ÄÄng\"\n                            required\n                        />\n                        <AvFeedback>Nháº­p bÃ¬nh luáº­n trÆ°á»c khi gá»­i</AvFeedback>\n                    </AvGroup>\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        <Button type=\"submit\" className=\"replyButton\" color=\"primary\">\n                            <span>Gá»­i bÃ¬nh luáº­n</span>\n                        </Button>\n                    </div>\n                </AvForm>\n            </Col>\n\n        </Row>\n    )\n}\n\nexport default CommentWrapper;","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/Comment.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/Home.js",["124","125","126","127","128"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/FirstAndLastDaysOfMonth.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostCreate.js",["129"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/TopicsDropdown.js",["130","131","132"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/api/Axios.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/Toast.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/checkUserLoggedIn.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/returnValueOrEmpty.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/DeleteModal.js",["133"],"import { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\n\nconst DeleteModal = (props) => {\n    const  { prompt, handleComfirm } = props;\n    // console.log(post, 'post');\n    return (\n        <Modal className=\"m-3\" isOpen={props.modal} toggle={() => props.toggle()} className=\"deleteModal\">\n            <ModalHeader toggle={() => props.toggle()}>\n                <span>XÃ¡c nháº­n xÃ³a</span>\n            </ModalHeader>\n            <ModalBody className=\"text-left\">\n                <span>{prompt}</span>\n            </ModalBody>\n            <ModalFooter>\n                <Button style={{ backgroundColor: '#ffffff', border: '1px solid #666666', color: '#666666' }}\n                    onClick={() => props.toggle()}>\n                    <span>Há»§y</span>\n                </Button>\n                <Button color=\"danger\" onClick={() => handleComfirm()}>\n                    <span>XÃ³a</span>\n                </Button>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nexport default DeleteModal;","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/Guess.js",["134","135","136","137","138"],"import React, { useEffect, useState } from 'react';\nimport { Col, Row, Container } from 'reactstrap';\nimport PostPreview from '../post/PostPreview';\n// import { useAuth } from '../../../../App'\nimport { useHistory, useParams } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Axios from '../../../api/Axios';\nimport { ToastError } from '../shared/Toast'\nimport moment from 'moment';\nimport Comment from '../comment/Comment'\n\nconst Guess = () => {\n    const { id } = useParams();\n    const [user, setUser] = useState(null);\n    // const history = useHistory();\n    const [totalCredit, setTotalCredit] = useState(0)\n\n\n    const [totalPage, setTotalPage] = useState(1);\n    const [posts, setPosts] = useState([]);\n    const [comments, setComments] = useState([]);\n    const [paginationState, setPaginationState] = useState({\n        currentPage: 1,\n        itemsPerPage: 10\n    });\n\n    const getUser = async () => {\n        try {\n            const res = await Axios.get(`/users/detail/${id}`);\n            if (res.status === 200) {\n                console.log(res, 'rees')\n                setUser(res.data.data)\n            } else {\n                ToastError(res.data.message)\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n \n\n\n    const getPosts = async () => {\n        try {\n            const res = await Axios.get(`/posts/user/${user?.id}?page=${paginationState.currentPage}`);\n            if (res.status === 200) {\n                // console.log(res.data.data.posts.total , 'res.res.data.data.total.data.posts)');\n                setPosts(res.data.data.posts.data);\n                const total = Math.ceil(res.data.data.posts.total / paginationState.itemsPerPage);\n                setTotalPage(total);\n                setTotalCredit(parseInt(res.data.data.totalCredit));\n            } else {\n                ToastError(res.data.message)\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const getComments = async () => {\n        try {\n            const res = await Axios.get(`/comments/user/${user?.id}`);\n            if (res.status === 200) {\n                // console.log(res, 'res')\n                if (res.data.data.data.length) {\n                    setComments(res.data.data.data);\n                } else {\n                    setComments([]);\n                }\n\n            } else {\n                ToastError(res.data.message)\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n\n    const handlePaginationChange = (event, value) => {\n        setPaginationState({ ...paginationState, currentPage: value })\n    }\n    useEffect(() => {\n        getUser();\n    }, [])\n    useEffect(() => {\n        getPosts();\n    }, [JSON.stringify(paginationState)]);\n    useEffect(() => {\n        if (user?.id) {\n            getComments();\n        }\n    }, [user?.id])\n    return (\n        <Container className=\"themed-container p-5\">\n            <Row>\n                <Col xs=\"8\">\n                    <Row>\n                        <Col xs=\"12\" >\n                            <span className=\"lead\">\n                                ThÃ´ng tin ngÆ°á»i dÃ¹ng\n                            </span>\n                        </Col>\n                        <Col xs=\"6\">\n                            <div className=\"font-weight-bold\">Há» tÃªn: </div>\n                            <div className=\"font-weight-bold\">Email: </div>\n                            <div className=\"font-weight-bold\">NgÃ y táº¡o tÃ i khoáº£n: </div>\n\n                        </Col>\n                        <Col xs=\"6\">\n                            <div>{user?.fname} {user?.lname} </div>\n                            <div>{user?.email}</div>\n                            <div>\n                                {moment(user?.created_at).format('DD/M/YYYY, h:mm')}\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col xs=\"4\">\n                    <div className=\"text-center border border-secondary rounded h-100 d-flex\">\n                        <h2 className=\"m-auto text-primary\">\n                            CREDIT: {totalCredit}\n                        </h2>\n                    </div>\n                </Col>\n            </Row>\n            <Row className=\"mt-5\">\n                <Col xs=\"7\">\n                    <Row>\n                        <Col xs=\"12\" >\n                            <span className=\"lead\">\n                                CÃ¡c bÃ i ÄÄng gáº§n ÄÃ¢y\n                        </span>\n                        </Col>\n                        <Col xs=\"12\" className=\"m-3\">\n                            <div className=\"border border-secondary rounded m-3\">\n                                {\n                                    posts?.length ? posts.map(e => (\n                                        <PostPreview\n                                            key={e.id}\n                                            post={e}\n                                            hideVote={true}\n                                        />\n                                    )) : <p className=\"text-center m-3\"> KhÃ´ng cÃ³ bÃ i ÄÄng nÃ o </p>\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row className={posts?.length ? \"justify-content-center\" : \"d-none\"}>\n                        <Pagination count={totalPage} variant=\"outlined\"\n                            onChange={handlePaginationChange}\n                            shape=\"rounded\" />\n                    </Row>\n                </Col>\n                <Col xs=\"5\">\n                    <Row>\n                        <Col xs=\"12\" >\n                            <span className=\"lead\">\n                                CÃ¡c bÃ¬nh luáº­n gáº§n ÄÃ¢y\n                        </span>\n                        </Col>\n                        <Col xs=\"12\" className=\"m-3\">\n                            <div className=\"border border-secondary rounded m-3\">\n                                {comments?.length ?\n                                    comments.map(e =>\n                                        <Comment\n                                            key={e.id}\n                                            clickDisplayPost={true}\n                                            isShort={true} entity={e} />\n                                    )\n                                    : <p className=\"text-center m-3\"> KhÃ´ng cÃ³ bÃ¬nh luáº­n nÃ o </p>\n                                }\n                            </div>\n\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default Guess;","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/useDebounce.js",["139"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/Search.js",["140","141","142","143","144","145"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/UserPreview.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":10,"column":58,"nodeType":"152","messageId":"153","endLine":10,"endColumn":64},{"ruleId":"150","severity":1,"message":"154","line":21,"column":10,"nodeType":"152","messageId":"153","endLine":21,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":66,"column":4,"nodeType":"157","endLine":66,"endColumn":10,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"156","line":78,"column":4,"nodeType":"157","endLine":78,"endColumn":10,"suggestions":"159"},{"ruleId":"155","severity":1,"message":"156","line":21,"column":8,"nodeType":"157","endLine":21,"endColumn":14,"suggestions":"160"},{"ruleId":"155","severity":1,"message":"161","line":70,"column":8,"nodeType":"157","endLine":70,"endColumn":14,"suggestions":"162"},{"ruleId":"155","severity":1,"message":"163","line":80,"column":8,"nodeType":"157","endLine":80,"endColumn":41,"suggestions":"164"},{"ruleId":"155","severity":1,"message":"165","line":80,"column":9,"nodeType":"166","endLine":80,"endColumn":40},{"ruleId":"150","severity":1,"message":"167","line":4,"column":34,"nodeType":"152","messageId":"153","endLine":4,"endColumn":40},{"ruleId":"155","severity":1,"message":"168","line":98,"column":8,"nodeType":"157","endLine":98,"endColumn":33,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":57,"column":83,"nodeType":"172","endLine":57,"endColumn":110},{"ruleId":"155","severity":1,"message":"161","line":39,"column":8,"nodeType":"157","endLine":39,"endColumn":16,"suggestions":"173"},{"ruleId":"150","severity":1,"message":"174","line":2,"column":38,"nodeType":"152","messageId":"153","endLine":2,"endColumn":44},{"ruleId":"150","severity":1,"message":"175","line":14,"column":18,"nodeType":"152","messageId":"153","endLine":14,"endColumn":22},{"ruleId":"155","severity":1,"message":"176","line":43,"column":8,"nodeType":"157","endLine":43,"endColumn":22,"suggestions":"177"},{"ruleId":"155","severity":1,"message":"163","line":90,"column":8,"nodeType":"157","endLine":90,"endColumn":67,"suggestions":"178"},{"ruleId":"155","severity":1,"message":"165","line":90,"column":9,"nodeType":"166","endLine":90,"endColumn":39},{"ruleId":"155","severity":1,"message":"179","line":24,"column":8,"nodeType":"157","endLine":24,"endColumn":21,"suggestions":"180"},{"ruleId":"150","severity":1,"message":"181","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"182","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":19},{"ruleId":"155","severity":1,"message":"183","line":33,"column":8,"nodeType":"157","endLine":33,"endColumn":10,"suggestions":"184"},{"ruleId":"170","severity":1,"message":"171","line":8,"column":83,"nodeType":"172","endLine":8,"endColumn":106},{"ruleId":"150","severity":1,"message":"185","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":20},{"ruleId":"155","severity":1,"message":"186","line":86,"column":8,"nodeType":"157","endLine":86,"endColumn":10,"suggestions":"187"},{"ruleId":"155","severity":1,"message":"163","line":89,"column":8,"nodeType":"157","endLine":89,"endColumn":41,"suggestions":"188"},{"ruleId":"155","severity":1,"message":"165","line":89,"column":9,"nodeType":"166","endLine":89,"endColumn":40},{"ruleId":"155","severity":1,"message":"161","line":94,"column":8,"nodeType":"157","endLine":94,"endColumn":18,"suggestions":"189"},{"ruleId":"155","severity":1,"message":"190","line":14,"column":6,"nodeType":"157","endLine":14,"endColumn":13,"suggestions":"191"},{"ruleId":"150","severity":1,"message":"192","line":2,"column":31,"nodeType":"152","messageId":"153","endLine":2,"endColumn":36},{"ruleId":"150","severity":1,"message":"174","line":2,"column":38,"nodeType":"152","messageId":"153","endLine":2,"endColumn":44},{"ruleId":"150","severity":1,"message":"193","line":2,"column":46,"nodeType":"152","messageId":"153","endLine":2,"endColumn":51},{"ruleId":"150","severity":1,"message":"194","line":13,"column":13,"nodeType":"152","messageId":"153","endLine":13,"endColumn":17},{"ruleId":"155","severity":1,"message":"195","line":63,"column":8,"nodeType":"157","endLine":63,"endColumn":58,"suggestions":"196"},{"ruleId":"155","severity":1,"message":"165","line":63,"column":27,"nodeType":"166","endLine":63,"endColumn":57},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'verifying' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["199"],["200"],["201"],"React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["202"],"React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["203"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'faPray' is defined but never used.","React Hook useEffect has a missing dependency: 'checkIfUserVotedThisPost'. Either include it or remove the dependency array.",["204"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["205"],"'Button' is defined but never used.","'omit' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["206"],["207"],"React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["208"],"'Row' is defined but never used.","'useStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllTopics'. Either include it or remove the dependency array.",["209"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["210"],["211"],["212"],"React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["213"],"'Label' is defined but never used.","'Input' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getEntities'. Either include it or remove the dependency array.",["214"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"215","fix":"217"},{"desc":"215","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"221","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [history, user]",{"range":"244","text":"245"},{"range":"246","text":"245"},{"range":"247","text":"245"},"Update the dependencies array to be: [getComments, user]",{"range":"248","text":"249"},"Update the dependencies array to be: [getPosts]",{"range":"250","text":"251"},"Update the dependencies array to be: [user, totalVote, postId, checkIfUserVotedThisPost]",{"range":"252","text":"253"},"Update the dependencies array to be: [getComments, postId]",{"range":"254","text":"255"},"Update the dependencies array to be: [user, user.topics]",{"range":"256","text":"257"},"Update the dependencies array to be: [debouncedQuery, getPosts, tabStatus]",{"range":"258","text":"259"},"Update the dependencies array to be: [history, props.modal, user]",{"range":"260","text":"261"},"Update the dependencies array to be: [getAllTopics]",{"range":"262","text":"263"},"Update the dependencies array to be: [getUser]",{"range":"264","text":"265"},{"range":"266","text":"251"},"Update the dependencies array to be: [getComments, user?.id]",{"range":"267","text":"268"},"Update the dependencies array to be: [delay, value]",{"range":"269","text":"270"},"Update the dependencies array to be: [getEntities, query, tabStatus]",{"range":"271","text":"272"},[1889,1895],"[history, user]",[2219,2225],[701,707],[2306,2312],"[getComments, user]",[2532,2565],"[getPosts]",[3243,3268],"[user, totalVote, postId, checkIfUserVotedThisPost]",[1288,1296],"[getComments, postId]",[1657,1671],"[user, user.topics]",[3253,3312],"[debouncedQuery, getPosts, tabStatus]",[839,852],"[history, props.modal, user]",[880,882],"[getAllTopics]",[2731,2733],"[getUser]",[2784,2817],[2910,2920],"[getComments, user?.id]",[329,336],"[delay, value]",[1987,2037],"[getEntities, query, tabStatus]"]